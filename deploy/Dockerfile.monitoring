# Multi-stage build for N1V1 Monitoring component
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt requirements-dev.txt ./
RUN pip install --upgrade pip && \
    pip install -r requirements.txt && \
    pip install -r requirements-dev.txt && \
    # Install monitoring-specific dependencies
    pip install prometheus-client pyyaml

# Production stage
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash n1v1

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy application code
COPY monitoring/ ./monitoring/
COPY core/metrics_collector.py ./core/
COPY core/metrics_endpoint.py ./core/
COPY utils/ ./utils/
COPY config.json ./

# Create directories for monitoring data
RUN mkdir -p /app/monitoring/data /app/logs

# Change ownership to non-root user
RUN chown -R n1v1:n1v1 /app

# Switch to non-root user
USER n1v1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:9090/-/healthy || exit 1

# Expose ports for monitoring
EXPOSE 9090 9093 9094

# Default command - could be a monitoring service or just keep container running
CMD ["python", "-c", "import time; time.sleep(3600)"]
